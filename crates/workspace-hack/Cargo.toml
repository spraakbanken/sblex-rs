# This file is generated by `cargo hakari`.
# To regenerate, run:
#     cargo hakari generate

[package]
name = "workspace-hack"
version = "0.1.0"
description = "workspace-hack package, managed by hakari"
# You can choose to publish this crate: see https://docs.rs/cargo-hakari/latest/cargo_hakari/publishing.
publish = false
edition = "2021"

# The parts of the file between the BEGIN HAKARI SECTION and END HAKARI SECTION comments
# are managed by hakari.

### BEGIN HAKARI SECTION
[dependencies]
ahash = { workspace = true, features = ["serde"] }
either = { workspace = true, features = ["use_std"] }
futures-channel = { workspace = true, features = ["sink"] }
futures-util = { workspace = true, features = [
    "async-await-macro",
    "channel",
    "io",
    "sink",
] }
getrandom = { workspace = true, features = ["std"] }
indexmap = { workspace = true, features = ["serde"] }
init-tracing-opentelemetry = { workspace = true, features = [
    "stdout",
    "tracing_subscriber_ext",
] }
log = { workspace = true, features = ["std"] }
num-traits = { workspace = true, features = ["i128", "std"] }
opentelemetry-http = { workspace = true, features = ["reqwest"] }
opentelemetry-otlp = { workspace = true, features = [
    "http-proto",
    "reqwest-client",
    "reqwest-rustls",
] }
opentelemetry-proto = { workspace = true, features = [
    "gen-tonic",
    "metrics",
    "trace",
] }
regex = { workspace = true }
regex-automata = { workspace = true, features = [
    "dfa-onepass",
    "hybrid",
    "meta",
    "nfa-backtrack",
    "perf-inline",
    "perf-literal",
    "unicode",
] }
regex-syntax = { workspace = true }
reqwest = { workspace = true, features = [
    "blocking",
    "cookies",
    "json",
    "rustls-tls-native-roots",
] }
serde = { workspace = true, features = ["derive", "rc"] }
serde_json = { workspace = true, features = ["raw_value"] }
smallvec = { workspace = true, features = ["const_new"] }
time = { workspace = true, features = ["formatting", "macros", "parsing"] }
tokio = { workspace = true, features = ["full"] }
tower = { workspace = true, features = [
    "balance",
    "buffer",
    "limit",
    "timeout",
    "util",
] }
tracing = { workspace = true, features = ["log"] }
tracing-core = { workspace = true }
tracing-log = { workspace = true, features = ["log-tracer", "std"] }
tracing-subscriber = { workspace = true, features = ["env-filter", "json"] }
unicode-bidi = { workspace = true }
unicode-normalization = { workspace = true }

[build-dependencies]
either = { workspace = true, features = ["use_std"] }
getrandom = { workspace = true, features = ["std"] }
proc-macro2 = { workspace = true }
quote = { workspace = true }
syn-dff4ba8e3ae991db = { package = "syn", version = "1", features = [
    "extra-traits",
    "full",
    "visit",
    "visit-mut",
] }
syn-f595c2ba2a3f28df = { package = "syn", version = "2", features = [
    "extra-traits",
    "full",
    "visit-mut",
] }
time-macros = { workspace = true, features = ["formatting", "parsing"] }

### END HAKARI SECTION
